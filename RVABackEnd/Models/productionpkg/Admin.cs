///////////////////////////////////////////////////////////
//  Admin.cs
//  Implementation of the Class Admin
//  Generated by Enterprise Architect
//  Created on:      23-Aug-2022 22:15:52
//  Original author: Miki
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using productionpkg;
namespace productionpkg {
	public class Admin : Worker, IAdmin {

		public List<IProductCommand> m_IProductCommand;
		public List<IWorkerCommand> m_IWorkerCommand;

		public Admin(){
			m_IWorkerCommand = new List<IWorkerCommand>();
			m_IProductCommand = new List<IProductCommand>();
		}

		~Admin(){

		}

		/// 
		/// <param name="product"></param>
		public bool ChangeProduction(Production production, char command){
            ProductCommand productCommand;

            if (command == 'd')
            {
				productCommand = new DeleteProductCommand();
            }
            else
            {
				productCommand = new ModifyProductCommand();
            }

			return productCommand.Execute(production);
		}

		/// 
		/// <param name="newWorker"></param>
		public bool ChangeWorkerList(Worker newWorker, char command){
			WorkerCommand workerCommand;

            if (command == 'a')
            {
				workerCommand = new AddWorkerCommand();
            }
            else
            {
				workerCommand = new ModifyWorkerCommand();
            }

			return workerCommand.Execute(newWorker);
		}

	}//end Admin

}//end namespace productionpkg